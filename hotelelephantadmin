--[[
 Hotel Elephant Admin Commands By Wexn

 For Commands Press F9  (Alternative :cmds)

 (I Obfuscate It So It Doesn't Take Up Space U Can Find OpenSource In My GitHub)
]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v69=0;while true do if (v69==0) then v19=v0(v3(v20,1,1));return "";end end else local v70=v2(v0(v20,16));if v19 then local v79=v5(v70,v19);v19=nil;return v79;else return v70;end end end);local function v21(v22,v23,v24)if v24 then local v71=0 + 0 ;local v72;while true do if (v71==0) then v72=(v22/((2 + 0)^(v23-(3 -2))))%(((2155 -1519) -(159 + 475))^(((v24-(681 -(137 + 543))) -(v23-(631 -((2567 -(789 + 1160)) + 12)))) + (1817 -(352 + 1464)))) ;return v72-(v72%(3 -2)) ;end end else local v73=437 -(83 + 354) ;local v74;while true do if (v73==(0 + 0)) then v74=2^(v23-(1 -0)) ;return (((v22%(v74 + v74))>=v74) and (939 -((757 -486) + 667))) or ((0 -0) -0) ;end end end end local function v25()local v38=0 + 0 ;local v39;while true do if (v38==(860 -(501 + 359))) then v39=v1(v16,v18,v18);v18=v18 + (2 -1) ;v38=1;end if (v38==(1 + (0 -0))) then return v39;end end end local function v26()local v40=(602 -(7 + 595)) -0 ;local v41;local v42;while true do if (v40==(0 -0)) then v41,v42=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;v40=1 + 0 ;end if (v40==(2 -1)) then return (v42 * (597 -341)) + v41 ;end end end local function v27()local v43,v44,v45,v46=v1(v16,v18,v18 + (4 -1) );v18=v18 + 2 + 2 ;return (v46 * (8025335 + 599980 + 8151901)) + (v45 * (4080 + 61456)) + (v44 * (808 -(43 + 70 + 439))) + v43 ;end local function v28()local v47=v27();local v48=v27();local v49=1 + 0 ;local v50=(v21(v48,1 -0 ,48 -28 ) * ((2 + 0)^((28 -20) + 24))) + v47 ;local v51=v21(v48,1121 -(808 + 292) ,83 -52 );local v52=((v21(v48,(62 + 1) -31 )==(68 -(2 + 30 + (57 -22)))) and  -(1 + 0)) or (414 -((1531 -(981 + 466)) + 329)) ;if (v51==(0 -(0 -0))) then if (v50==(1344 -(765 + 579))) then return v52 * ((3258 -(225 + 1155)) -(1409 + 469)) ;else v51=1 + 0 ;v49=1606 -(603 + 1003) ;end elseif (v51==(3636 -(186 + (1666 -(180 + 83))))) then return ((v50==(0 + 0)) and (v52 * ((1461 -(940 + 520))/(0 -0)))) or (v52 * NaN) ;end return v8(v52,v51-(2391 -(852 + 516)) ) * (v49 + (v50/((353 -(124 + 227))^(358 -(170 + 136))))) ;end local function v29(v30)local v53;if  not v30 then local v75=0 + 0 ;while true do if (v75==(0 -(0 -0))) then v30=v27();if (v30==(978 -(24 + 954))) then return "";end break;end end end v53=v3(v16,v18,(v18 + v30) -1 );v18=v18 + v30 ;local v54={};for v67=1530 -(1196 + 333) , #v53 do v54[v67]=v2(v1(v3(v53,v67,v67)));end return v6(v54);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=1509 -(641 + 868) ;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55~=(8 -5)) then else v62=nil;while true do if (v56~=(0 -0)) then else local v95=0 -0 ;while true do if ((1 -0)==v95) then v59={};v60={v57,v58,nil,v59};v95=8 -6 ;end if ((5 -3)~=v95) then else v56=1;break;end if (v95~=(1134 -(348 + 786))) then else v57={};v58={};v95=1 -0 ;end end end if ((1 + 0)~=v56) then else local v96=0 + 0 ;while true do if (v96==2) then v56=1167 -(515 + 650) ;break;end if ((3 -2)~=v96) then else local v106=0;while true do if (1==v106) then v96=1 + 1 ;break;end if (v106==(1554 -(964 + 590))) then for v113=2 -1 ,v61 do local v114=0;local v115;local v116;while true do if (v114==(2 -1)) then if (v115==(1 + 0)) then v116=v25()~=(0 + 0) ;elseif (v115==2) then v116=v28();elseif (v115==(2 + 1)) then v116=v29();end v62[v113]=v116;break;end if (v114==(0 -0)) then local v118=0;local v119;while true do if (v118~=(0 -0)) then else v119=0 + 0 ;while true do if ((1049 -(870 + 179))~=v119) then else v115=v25();v116=nil;v119=1;end if ((1 + 0)==v119) then v114=1;break;end end break;end end end end end v60[1 + 2 ]=v25();v106=1 + 0 ;end end end if (v96~=(0 -0)) then else local v107=0 + 0 ;while true do if (v107==0) then v61=v27();v62={};v107=546 -(7 + 538) ;end if (v107==1) then v96=476 -(171 + 304) ;break;end end end end end if ((2 + 0)~=v56) then else local v97=1011 -(389 + 622) ;local v98;while true do if (v97==(0 + 0)) then v98=0 + 0 ;while true do if (v98==(0 + 0)) then local v111=0 -0 ;while true do if (v111~=0) then else for v120=1484 -(1198 + 285) ,v27() do local v121=834 -(64 + 770) ;local v122;local v123;local v124;local v125;while true do if (v121==(1611 -(1156 + 455))) then v122=0;v123=nil;v121=1821 -(1123 + 697) ;end if ((2 -1)==v121) then v124=nil;v125=nil;v121=1 + 1 ;end if (v121==(2 + 0)) then while true do if (v122==0) then local v178=758 -(563 + 195) ;while true do if (v178~=(1 + 0)) then else v122=2 -1 ;break;end if (v178==(0 -0)) then v123=0;v124=nil;v178=3 -2 ;end end end if (v122~=(1 + 0)) then else v125=nil;while true do if (v123==0) then v124=0 -0 ;v125=nil;v123=1;end if (v123~=(1297 -(48 + 1248))) then else while true do if (v124==0) then v125=v25();if (v21(v125,1 + 0 ,1 + 0 )~=(0 + 0)) then else local v203=0 -0 ;local v204;local v205;local v206;local v207;local v208;while true do if (v203~=(787 -(159 + 626))) then else v208=nil;while true do if (v204==(0 -0)) then v205=0 -0 ;v206=nil;v204=1;end if (v204==(2 + 0)) then while true do if (v205~=(135 -(27 + 106))) then else if (v21(v207,1 + 0 ,16 -(14 + 1) )==(1 + 0)) then v208[1209 -(277 + 930) ]=v62[v208[2]];end if (v21(v207,6 -4 ,6 -4 )~=1) then else v208[5 -2 ]=v62[v208[3]];end v205=2 + 1 ;end if (v205==(2 -1)) then local v212=0;while true do if (v212==(0 + 0)) then v208={v26(),v26(),nil,nil};if (v206==0) then local v221=1789 -(1352 + 437) ;local v222;local v223;while true do if (v221==(1336 -(859 + 477))) then v222=0 -0 ;v223=nil;v221=1;end if (v221==(1204 -(743 + 460))) then while true do if (v222~=(0 -0)) then else v223=0;while true do if (v223==(0 + 0)) then v208[3]=v26();v208[4 + 0 ]=v26();break;end end break;end end break;end end elseif (v206==(695 -(604 + 90))) then v208[9 -6 ]=v27();elseif (v206==(6 -4)) then v208[3]=v27() -(2^(272 -(55 + 201))) ;elseif (v206==(1 + 2)) then local v226=741 -(110 + 631) ;while true do if (v226==(0 -0)) then v208[377 -(276 + 98) ]=v27() -((1477 -(1021 + 454))^(2 + 14)) ;v208[10 -6 ]=v26();break;end end end v212=641 -(398 + 242) ;end if (v212~=(3 -2)) then else v205=2 -0 ;break;end end end if (v205~=(0 + 0)) then else local v213=0 + 0 ;while true do if (v213==(999 -(115 + 884))) then v206=v21(v125,671 -(653 + 16) ,3);v207=v21(v125,17 -13 ,6);v213=1 + 0 ;end if (v213==(1 -0)) then v205=1 -0 ;break;end end end if (v205==3) then if (v21(v207,3,3)==(1827 -(297 + 1529))) then v208[1487 -(315 + 1168) ]=v62[v208[1183 -(273 + 906) ]];end v57[v120]=v208;break;end end break;end if (v204==(1 + 0)) then local v211=0 -0 ;while true do if (1==v211) then v204=2;break;end if (v211==(0 -0)) then v207=nil;v208=nil;v211=1;end end end end break;end if (v203~=(1018 -(961 + 56))) then else v206=nil;v207=nil;v203=2 -0 ;end if (v203~=(0 + 0)) then else v204=0 + 0 ;v205=nil;v203=1 + 0 ;end end end break;end end break;end end break;end end break;end end end for v126=1 + 0 ,v27() do v58[v126-(1 + 0) ]=v33();end v111=1 -0 ;end if (v111~=(658 -(213 + 444))) then else v98=2 -1 ;break;end end end if (v98==(1 + 0)) then local v112=0 + 0 ;while true do if ((101 -(33 + 68))==v112) then for v128=1,v27() do v59[v128]=v27();end return v60;end end end end break;end end end end break;end if (v55==(1042 -(613 + 429))) then v56=0 + 0 ;v57=nil;v55=1;end if (v55==2) then v60=nil;v61=nil;v55=9 -6 ;end if (v55~=1) then else v58=nil;v59=nil;v55=523 -(471 + 50) ;end end end local function v34(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (v63==0) then v64=v35[1];v65=v35[2];v63=1;end if (v63==1) then v66=v35[3];return function(...)local v80=1;local v81= -1;local v82={...};local v83=v12("#",...) -1 ;local function v84()local v85=v64;local v86=v65;local v87=v66;local v88=v32;local v89={};local v90={};local v91={};for v99=0 + 0 ,v83 do if ((v99>=v87) or ((1069 + 323)<=(80 + 280))) then v89[v99-v87 ]=v82[v99 + 1 + 0 ];else v91[v99]=v82[v99 + 1 ];end end local v92=(v83-v87) + 1 + 0 ;local v93;local v94;while true do local v100=0;while true do if (((144 + 4134)>(774 + 80)) and (v100==1)) then if ((((2219 -1448) + 3477)<=(5860 -(757 + 810))) and (v94<=(1467 -(1203 + 255)))) then if ((v94<=4) or (2974<=(2212 -(490 + 961)))) then if (((4329 -2323)>=(2323 -(100 + 747))) and (v94<=((1554 -(680 + 871)) -2))) then if ((82<=(1077 -(168 + 475))) and (v94==(0 -0))) then for v149=v93[2 -0 ],v93[1 + 2 ] do v91[v149]=nil;end else v91[v93[3 -1 ]][v93[700 -(253 + 444) ]]=v91[v93[(13 + 6) -15 ]];end elseif ((((5858 -4253) + 2596)<=(260 + 4625)) and (v94<=(2 + 0))) then if (((915 -626)<(14 + 286)) and (v93[2 -0 ]==v91[v93[1 + (8 -5) ]])) then v80=v80 + (2 -1) ;else v80=v93[613 -(545 + 65) ];end elseif (((307 + 1629)<2385) and (v94==(635 -(550 + 82)))) then do return;end else local v152=0 -0 ;local v153;local v154;local v155;local v156;local v157;while true do if (((2185 -(17 + 13))<=(397 + 1942)) and (v152==1)) then local v179=1974 -(661 + 1313) ;while true do if (((5163 -(64 + 416))>(3693 -(398 + 227))) and (v179==(1 + 0))) then v152=456 -(441 + 13) ;break;end if (((5300 -1596)>(466 + 1635)) and (v179==(0 -0))) then v155=nil;v156=nil;v179=3 -2 ;end end end if ((0==v152) or ((912 -637)>(3662 -(26 + 21)))) then local v180=0 + 0 ;while true do if (((6621 -(1432 + 214))>1374) and (v180==(106 -(82 + 23)))) then v152=1 + 0 ;break;end if (((0 -0)==v180) or ((2385 -(194 + 216))>=(4298 -(645 + 632)))) then v153=0;v154=nil;v180=1 + 0 ;end end end if ((v152==((406 -(32 + 372)) -0)) or ((5493 -3110)==(5628 -(679 + 692)))) then v157=nil;while true do if (((3666 -(432 + 65))<=(12281 -7545)) and (v153==(2 -0))) then for v194=v154,v81 do local v195=851 -(225 + 626) ;while true do if ((3198>=1171) and (v195==(0 + 0))) then v157=v157 + 1 + (236 -(157 + 79)) ;v91[v194]=v155[v157];break;end end end break;end if ((v153==(1 + 0)) or ((17062 -12584)<=(17 + (1739 -(821 + 659))))) then local v183=0;local v184;while true do if ((((2398 + 4542) -2632)>(516 + 156)) and (v183==0)) then v184=0;while true do if ((v184==(0 + 0)) or ((4785 -(34 + 1802))<=(417 + 29))) then v81=(v156 + v154) -(1 -0) ;v157=0 -0 ;v184=1 + 0 ;end if (((2754 -(539 + 494))>=(1169 + 482)) and (v184==(1 + 0 + 0))) then v153=2;break;end end break;end end end if ((v153==((0 -0) -0)) or ((4325 -2622)<=(2651 -949))) then local v185=(236 -(152 + 84)) -0 ;while true do if (((1502 -(1171 + 331))==v185) or (2782>=4245)) then v154=v93[2 -0 ];v155,v156=v88(v91[v154](v91[v154 + (3 -2) ]));v185=1 + 0 ;end if (((507 + 333)==(3966 -3126)) and (v185==(1 + 0 + 0))) then v153=1;break;end end end end break;end end end elseif ((2857==(4354 -(404 + 1093))) and (v94<=(15 -9))) then if ((v94==5) or (548>=(4358 -(6572 -4036)))) then v80=v93[(24 -18) -3 ];elseif (((4856 -(185 + 1020))>=(1738 -401)) and (v91[v93[2]]==v93[4 + 0 ])) then v80=v80 + 1 + 0 + 0 ;else v80=v93[7 -4 ];end elseif ((v94<=(6 + 1)) or ((1010 + 1393)<(2083 -1200))) then v91[v93[2]][v93[3]]=v93[1500 -(257 + 1239) ];elseif ((v94>(1917 -((3718 -2005) + 196))) or ((16 + 577)>(4811 -1855))) then v91[v93[2 + 0 + 0 ]]=v34(v86[v93[3 + 0 ]],nil,v37);else v91[v93[4 -2 ]]=v37[v93[3 + 0 ]];end elseif ((((4646 -2939) + 2435)>(38 + 607)) and (v94<=((248 -(161 + 65)) -8))) then if ((v94<=11) or ((471 -(260 + 75))==(323 + 1948))) then if ((1194<(3360 -(218 + 475))) and (v94==(1056 -(339 + (3237 -2530))))) then v91[v93[2 -0 ]]=v93[750 -(649 + 98) ];else local v137=0 -0 ;local v138;local v139;while true do if (((4257 -2693)<=4765) and ((0 -0)==v137)) then local v177=0 -0 ;while true do if ((v177==1) or (2678>(5981 -(1164 + 431)))) then v137=1;break;end if ((v177==0) or ((30 + 258)>2686)) then v138=0;v139=nil;v177=1 + 0 ;end end end if ((v137==(2 -1)) or ((3843 -(186 + 65))<1502)) then while true do if (((983 + 654)<=(2777 + 425)) and (v138==(0 -0))) then v139=v93[1 + 1 ];v91[v139](v13(v91,v139 + 1 + 0 ,v81));break;end end break;end end end elseif ((v94<=(42 -30)) or ((1293 + 2526)<(2642 -(813 + 923)))) then v91[v93[2]]={};elseif ((v94>(33 -(40 -20))) or (4794<=(2058 + 2465))) then local v162=0 -0 ;local v163;local v164;local v165;while true do if (((10140 -5165)>=3032) and (v162==0)) then v163=0 + 0 ;v164=nil;v162=(1 + 0) -0 ;end if (((1947 + 578 + 312)>(57 + 14 + 12)) and (v162==(2 -1))) then v165=nil;while true do if (((2 -1)==v163) or ((1428 + 3198)<(1078 + 1981))) then while true do if (((5492 -(187 + 681))==(306 + 4318)) and (v164==0)) then v165=v93[20 -(17 + 1) ];v91[v165](v13(v91,v165 + 1 + 0 ,v93[5 -2 ]));break;end end break;end if (((230 + 1601)>(4503 -2741)) and (v163==(30 -(15 + 15)))) then v164=0;v165=nil;v163=1 + 0 ;end end break;end end else local v166=0 -0 ;local v167;local v168;while true do if ((v166==(0 + 0)) or (3420<=(2029 -(126 + (1326 -618))))) then v167=1442 -(378 + 1064) ;v168=nil;v166=1;end if (((5322 -3768)<=(235 + 1748)) and (v166==(1790 -(195 + 1594)))) then while true do if ((v167==(0 + 0)) or ((12969 -8657)<=(480 + 1386))) then v168=v93[1056 -(862 + 192) ];v91[v168]=v91[v168](v13(v91,v168 + (555 -(295 + (839 -580))) ,v93[3]));break;end end break;end end end elseif ((v94<=(22 -6)) or ((2393 -1583)>2941)) then if ((v94>(395 -(115 + 265))) or (4111<=1351)) then v91[v93[1056 -(983 + 71) ]]=v91[v93[3]][v93[(13 -8) -1 ]];else v91[v93[2 + 0 ]]=v91[v93[(1783 -(125 + 1657)) + 2 ]];end elseif ((v94<=(1181 -(762 + 402))) or (2214>=(4624 -(719 + 438)))) then local v145=836 -(27 + 809) ;local v146;local v147;local v148;while true do if (((488 -(19 + 468))==v145) or ((976 + 351 + 1486)<1454)) then v148=nil;while true do if ((3964==3964) and (v146==(17 -(13 + 3)))) then while true do if (((349 -119)>(364 -191)) and ((0 -0)==v147)) then v148=v93[972 -((895 -626) + (986 -285)) ];v91[v148]=v91[v148](v91[v148 + 1 ]);break;end end break;end if (((5673 -2776)<=(4968 -(1024 + 507))) and (v146==(0 -0))) then local v182=(513 -(158 + 355)) + 0 ;while true do if ((v182==(0 + 0 + 0)) or ((4461 -(1892 + 90))<(1864 -890))) then v147=1549 -(357 + 717 + 475) ;v148=nil;v182=(768 + 569) -(1270 + 66) ;end if ((v182==(1 + 0 + 0)) or (1643==(4104 + 471))) then v146=1878 -((1879 -(360 + 353)) + 711) ;break;end end end end break;end if ((((6711 -(282 + 369)) -((5670 -4352) + 520))>=(151 + 773)) and (v145==(1977 -(1598 + 379)))) then v146=0 + 0 ;v147=nil;v145=(2357 -(1474 + 443)) -(108 + 331) ;end end elseif ((v94>((996 -(524 + 421)) -33)) or ((488 + 3866)<(3668 -1257))) then local v169=(2590 -(1540 + 97)) -(81 + 872) ;local v170;local v171;local v172;while true do if ((v169==(0 + 0)) or ((551 + 554)==((10436 -7610) -(5 + 3 + 1028)))) then v170=0;v171=nil;v169=1;end if (((3438 -((629 -(186 + 439)) + 822))==2612) and (v169==1)) then v172=nil;while true do if ((v170==(1 + 0)) or (3048<=(1790 -1276))) then v91[v171 + (644 -(94 + 549)) ]=v172;v91[v171]=v172[v93[4]];break;end if ((v170==(0 + 0)) or ((2352 -860)>=(2048 -554))) then local v191=1309 -(393 + 916) ;local v192;while true do if (((2432 + 788 + 102)>(2451 -(93 + 513))) and (v191==((1043 -(151 + 892)) + 0))) then v192=0 + 0 ;while true do if (((203 + 143)<(459 + 2796)) and (v192==((2666 -1526) -(829 + 311)))) then v171=v93[6 -4 ];v172=v91[v93[1 + 2 ]];v192=2 -1 ;end if ((v192==(614 -(365 + 248))) or ((18391 -13602)<(6629 -(7215 -3401)))) then v170=1 + 0 ;break;end end break;end end end end break;end end else local v173=0 -0 ;local v174;local v175;local v176;while true do if ((v173==(0 + (0 -0))) or ((1466 -(91 + 254))==(1448 + 2738))) then v174=0 + 0 ;v175=nil;v173=1;end if (((1568 -499)<2313) and ((2 -(3 -2))==v173)) then v176=nil;while true do if (((417 + 307)<=(4277 -(1229 + 89))) and (v174==1)) then while true do if (((6 + 53)<(1856 -988)) and (v175==(1791 -(1685 + 106)))) then v176=v93[2];v91[v176](v91[v176 + 1 ]);break;end end break;end if ((v174==0) or ((264 -(1612 -(407 + 1161)))>=(5496 -(1377 + 253)))) then local v193=1432 -((2894 -(399 + 1512)) + 449) ;while true do if ((((334 -214) + 1985)>=(1255 + 398)) and (v193==(0 + 0))) then v175=0 -0 ;v176=nil;v193=387 -(183 + 203) ;end if ((((1005 -(122 + 882)) + 0)==v193) or (((11243 -3062) -5663)<=(1822 -(243 + (68 -25))))) then v174=1855 -(925 + 929) ;break;end end end end break;end end end v80=v80 + (1375 -(1232 + 142)) ;break;end if ((v100==0) or ((500 + 251)==(4972 -(87 + 240)))) then v93=v85[v80];v94=v93[(496 -(365 + 129)) -1 ];v100=(1 -0) -0 ;end end end end A,B=v32(v11(v84));if  not A[1] then local v101=v35[4][v80] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
